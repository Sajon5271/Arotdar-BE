/* eslint-disable */
export default async () => {
    const t = {
        ["./enums/UserTypes.enum"]: await import("./enums/UserTypes.enum"),
        ["./transaction-logs/dtos/new-transaction.dto"]: await import("./transaction-logs/dtos/new-transaction.dto"),
        ["./enums/Transaction.enum"]: await import("./enums/Transaction.enum"),
        ["./transaction-logs/dtos/partials/product.dto"]: await import("./transaction-logs/dtos/partials/product.dto"),
        ["./schemas/user.schema"]: await import("./schemas/user.schema"),
        ["./users/public-user-properties"]: await import("./users/public-user-properties"),
        ["./schemas/inventory.schema"]: await import("./schemas/inventory.schema"),
        ["./schemas/inventory-logs.schema"]: await import("./schemas/inventory-logs.schema"),
        ["./schemas/trading-partners.schema"]: await import("./schemas/trading-partners.schema")
    };
    return { "@nestjs/swagger": { "models": [[import("./auth/dtos/sign-in.dto"), { "SignInDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./auth/dtos/sign-up.dto"), { "SignUpDto": { email: { required: true, type: () => String }, name: { required: true, type: () => String, minLength: 2, maxLength: 50 }, password: { required: true, type: () => String, maxLength: 50 }, roles: { required: true, type: () => [String] } } }], [import("./shared/dtos/param.dto"), { "ParamDto": { id: { required: true, type: () => String } } }], [import("./inventory/dtos/product.dto"), { "ProductDto": { productName: { required: true, type: () => String }, productDescription: { required: false, type: () => String }, quantity: { required: true, type: () => Number }, currentPricePerUnit: { required: true, type: () => Number, minimum: 0 } }, "UpdateProductDto": {}, "UpdatePriceDto": {} }], [import("./inventory/dtos/update-quantity.dto"), { "UpdateQuantityDto": { quantity: { required: true, type: () => Number }, isSelling: { required: true, type: () => Boolean } } }], [import("./shared/dtos/paginated.dto"), { "PaginationDto": { pageNumber: { required: true, type: () => Number }, pageSize: { required: true, type: () => Number }, sortBy: { required: false, type: () => String } } }], [import("./trading-partners/dtos/paginated-response.dto"), { "PaginatedResults": { Results: { required: true }, TotalPages: { required: true, type: () => Number }, CurrentPage: { required: true, type: () => Number }, TotalDataLength: { required: true, type: () => Number }, PageSize: { required: true, type: () => Number } } }], [import("./trading-partners/dtos/partner-details.dto"), { "PartnerDetailsDto": { name: { required: true, type: () => String }, email: { required: false, type: () => String }, type: { required: true, enum: t["./enums/UserTypes.enum"].PartnerType }, companyName: { required: false, type: () => String }, location: { required: false, type: () => String } } }], [import("./transaction-logs/dtos/new-transaction.dto"), { "TradedProduct": { productId: { required: true, type: () => String }, quantityTraded: { required: true, type: () => Number }, pricePerUnit: { required: true, type: () => Number }, discount: { required: false, type: () => Number } }, "NewTransactionDto": { products: { required: true, type: () => [t["./transaction-logs/dtos/new-transaction.dto"].TradedProduct] }, transactionType: { required: true, enum: t["./enums/Transaction.enum"].TransactionType }, partnerType: { required: true, enum: t["./enums/UserTypes.enum"].PartnerType }, customerType: { required: false, enum: t["./enums/UserTypes.enum"].CustomerType }, partnerId: { required: false, type: () => String }, due: { required: true, type: () => Number }, paid: { required: true, type: () => Number }, finalPrice: { required: true, type: () => Number } } }], [import("./transaction-logs/dtos/update-due-amount.dto"), { "UpdateDueOfPartners": { partnerId: { required: true, type: () => String }, dueChange: { required: true, type: () => Number } } }], [import("./transaction-logs/dtos/partials/product.dto"), { "BuyProductInfoDTO": {}, "SellProductInfoDTO": {} }], [import("./transaction-logs/dtos/buy-products.dto"), { "BuyProductDTO": { products: { required: true, type: () => [t["./transaction-logs/dtos/partials/product.dto"].BuyProductInfoDTO] }, partnerId: { required: true, type: () => String }, partnerName: { required: false, type: () => String }, due: { required: true, type: () => Number }, paid: { required: true, type: () => Number }, finalPrice: { required: true, type: () => Number } } }], [import("./transaction-logs/dtos/sell-product.dto"), { "SellProductDTO": { products: { required: true, type: () => [t["./transaction-logs/dtos/partials/product.dto"].SellProductInfoDTO] }, partnerId: { required: false, type: () => String }, partnerName: { required: false, type: () => String }, due: { required: true, type: () => Number }, paid: { required: true, type: () => Number }, finalPrice: { required: true, type: () => Number } } }]], "controllers": [[import("./auth/auth.controller"), { "AuthController": { "signUp": { type: t["./schemas/user.schema"].User }, "signIn": {}, "signOut": { type: Object } } }], [import("./users/user.controller"), { "UserController": { "getAllUser": { type: [t["./schemas/user.schema"].User] }, "getUserInfo": { type: t["./users/public-user-properties"].PublicUserProperties }, "removeUser": {} } }], [import("./inventory/inventory.controller"), { "InventoryController": { "addNewProduct": { type: t["./schemas/inventory.schema"].Inventory }, "getAllProducts": { type: [t["./schemas/inventory.schema"].Inventory] }, "updateProduct": { type: t["./schemas/inventory.schema"].Inventory }, "updateQuantity": { type: t["./schemas/inventory.schema"].Inventory }, "updatePrice": { type: t["./schemas/inventory.schema"].Inventory }, "getProductHistory": { type: [t["./schemas/inventory-logs.schema"].InventoryLogs] }, "getAllProductHistory": { type: [t["./schemas/inventory-logs.schema"].InventoryLogs] } } }], [import("./trading-partners/trading-partners.controller"), { "TradingPartnersController": { "getAll": { type: [t["./schemas/trading-partners.schema"].TradingPartner] }, "getAllPaginated": {}, "getAllCustomers": {}, "getAllSuppliers": {}, "addPartner": { type: Object }, "removePartner": { type: Object } } }], [import("./transaction-logs/transaction-logs.controller"), { "TransactionLogsController": { "getAllLogs": {}, "getSellTransactions": {}, "getBuyTransactions": {}, "buyProoduct": { type: Object }, "sellProoduct": { type: Object }, "updateDueAmount": { type: Object } } }]] } };
};